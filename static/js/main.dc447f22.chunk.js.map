{"version":3,"sources":["containers/addSchedule.js","actions/index.js","App.js","reducers/schedule.js","reducers/index.js","store.js","index.js","utils/service-worker.js"],"names":["connect","state","dispatch","onAddScheduleClick","list","type","data","HOUR","MINUTE","React","useState","columns","title","field","lookup","34","63","setState","Paper","editable","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice","Button","onClick","App","value","handleChange","event","handleChangeIndex","index","this","props","classes","theme","className","root","AppBar","position","color","Tabs","onChange","indicatorColor","textColor","fullWidth","Tab","label","component","Link","to","path","PageShell","AddSchedule","ItemTwo","Component","Page","previous","transitionAppear","transitionAppearTimeout","transitionEnterTimeout","transitionLeaveTimeout","transitionName","match","console","log","withStyles","backgroundColor","palette","background","paper","width","withTheme","persistentReducer","action","payload","reducer","combineReducers","schedule","db","PouchDB","applyMiddlewares","applyMiddleware","createStoreWithMiddleware","compose","persistentStore","createStore","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","register","then","warn"],"mappings":"kbAuGA,IAQeA,eARS,SAACC,GAAD,MAAY,MAIT,SAACC,GAAD,MAAe,CACxCC,mBAAoB,SAACC,GAAD,OAAUF,EC1GvB,CACLG,KAAM,eACNC,KDwGiDF,QAGtCJ,EAtGf,YAAyC,IACdM,EADRH,EAAqB,EAArBA,mBAaXI,EAAO,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IACvDC,EAAS,CAAC,EAAE,IAdoB,EAeXC,IAAMC,SAAS,CAC3CC,QAAS,CACJ,CACEC,MAAO,OACPC,MAAO,OACPC,OAAQ,CAAEC,GAAI,SAAUC,GAAI,WAEjC,CACKJ,MAAO,YACPC,MAAO,WACPC,OAAQP,GAEb,CACKK,MAAO,YACPC,MAAO,WACPC,OAAQN,GAEb,CACKI,MAAO,UACPC,MAAO,SACPC,OAAQP,GAEb,CACKK,MAAO,UACPC,MAAO,SACPC,OAAQN,IAGfF,KAAK,KA3CkC,mBAe9BL,EAf8B,KAevBgB,EAfuB,KA6CtC,OACA,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CACEN,MAAM,mBACND,QAASV,EAAMU,QAClBL,KAAML,EAAMK,KACTa,SAAU,CACRC,SAAU,SAACC,GAAD,OACR,IAAIC,SAAQ,SAACC,GACXC,YAAW,WACTD,IACAN,GAAS,SAACQ,GACR,IAAMnB,EAAI,YAAOmB,EAAUnB,MAE3B,OADAA,EAAKoB,KAAKL,GACH,2BAAKI,GAAZ,IAAuBnB,cAExB,SAEPqB,YAAa,SAACN,EAASO,GAAV,OACX,IAAIN,SAAQ,SAACC,GACXC,YAAW,WACTD,IACIK,GACFX,GAAS,SAACQ,GACR,IAAMnB,EAAI,YAAOmB,EAAUnB,MAE3B,OADAA,EAAKA,EAAKuB,QAAQD,IAAYP,EACvB,2BAAKI,GAAZ,IAAuBnB,cAG1B,SAEPwB,YAAa,SAACF,GAAD,OACX,IAAIN,SAAQ,SAACC,GACXC,YAAW,WACTD,IACAN,GAAS,SAACQ,GACR,IAAMnB,EAAI,YAAOmB,EAAUnB,MAE3B,OADAA,EAAKyB,OAAOzB,EAAKuB,QAAQD,GAAU,GAC5B,2BAAKH,GAAZ,IAAuBnB,cAExB,YAId,kBAAC0B,EAAA,EAAD,CAAQC,SAxFkB3B,EAwFOL,EAAMK,UAvFpCH,EAAmBG,KAuFtB,c,OEtED,IAOM4B,E,4MACJjC,MAAQ,CACNkC,MAAO,G,EAGTC,aAAe,SAACC,EAAOF,GACrB,EAAKlB,SAAS,CAAEkB,W,EAGlBG,kBAAoB,SAAAC,GAClB,EAAKtB,SAAS,CAAEkB,MAAOI,K,uDAGf,IAAD,EACoBC,KAAKC,MAAxBC,EADD,EACCA,QADD,EACUC,MAEjB,OACE,kBAAC,IAAD,KACE,yBAAKC,UAAWF,EAAQG,MACtB,kBAACC,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAM,WAC9B,kBAACC,EAAA,EAAD,CACEd,MAAOK,KAAKvC,MAAMkC,MAClBe,SAAUV,KAAKJ,aACfe,eAAe,UACfC,UAAU,UACVC,WAAS,GAET,kBAACC,EAAA,EAAD,CAAKC,MAAM,eAAeC,UAAWC,IAAMC,GAAG,iBAC9C,kBAACJ,EAAA,EAAD,CAAKC,MAAM,WAAWC,UAAWC,IAAMC,GAAG,WAI9C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,eAAeH,UAAWI,EAAUC,KAChD,kBAAC,IAAD,CAAOF,KAAK,OAAOH,UAAWI,EAAUE,Y,GAlClCrD,IAAMsD,WAuDxB,SAASD,EAAQnB,GACf,OACE,kBAACzB,EAAA,EAAD,KACE,0CAKN,IAAM0C,EAAY,SAACI,EAAMC,GACvB,OAAO,SAAAxB,GAAK,OACV,yBAAKG,UAAU,QACb,kBAAC,IAAD,CACEsB,kBAAkB,EAClBC,wBAAyB,IACzBC,uBAAwB,IACxBC,uBAAwB,IACxBC,eAAqC,SAArB7B,EAAM8B,MAAMZ,KAAkB,UAAY,YAEzDa,QAAQC,IAAIhC,GACb,kBAACuB,EAASvB,OAMHiC,eAvFA,SAAA/B,GAAK,MAAK,CACvBE,KAAM,CACJ8B,gBAAiBhC,EAAMiC,QAAQC,WAAWC,MAC1CC,MAAO,QAoFuB,CAAEC,WAAW,GAAhCN,CAAwCxC,G,mCCrGxC+C,eAZE,WAAyB,IAAxBhF,EAAuB,uDAAf,GAAIiF,EAAW,uCACvC,OAAQA,EAAO7E,MACb,IAAK,eACH,MAAM,GAAN,mBACKJ,GADL,CAEEiF,EAAOC,UAEX,QACE,OAAOlF,MCFEmF,EAJCC,YAAgB,CAC9BC,aCCIC,EAAK,IAAIC,IAAQ,UACjBC,EAAmBC,cAOVC,EALmBC,YAChCH,EACAI,YAAgBN,GAFgBK,CAGhCE,IAEaH,CAA0BP,EAAS,ICPlDW,IAASC,OACP,kBAAC,IAAD,CAAUC,MAAOA,GACf,kBAAC,EAAD,OAEFC,SAASC,eAAe,SCRpB,kBAAmBC,UACrBA,UAAUC,cAAcC,SAAS,sBAC9BC,MAAK,WACJ/B,QAAQC,IAAI,gCAGhBD,QAAQgC,KAAK,qD","file":"static/js/main.dc447f22.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MaterialTable from 'material-table';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { addSchedule } from '../actions';\r\n\r\nimport { sendNotification } from '../utils/service-worker';\r\n\r\nfunction Schedule({onAddScheduleClick}) {\r\n  const handleSaveClick = (data) => {\r\n    onAddScheduleClick(data);\r\n\r\n    // if (!todo.completed) {\r\n      // sendNotification({\r\n        // title: `You have completed todo with id ${todo.id}!`,\r\n        // text: todo.text\r\n      // });\r\n    // }\r\n  };\r\n  \r\n  const DS_NHANVIEN = [];\r\n  const HOUR = [6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23];\r\n  const MINUTE = [0,30];\r\n   const [state, setState] = React.useState({\r\n\tcolumns: [\r\n      {\r\n        title: 'User',\r\n        field: 'user',\r\n        lookup: { 34: 'User 1', 63: 'User 2' },\r\n      },\r\n\t  {\r\n        title: 'Start(hh)',\r\n        field: 'start-hh',\r\n        lookup: HOUR,\r\n      },\r\n\t  {\r\n        title: 'Start(mm)',\r\n        field: 'start-mm',\r\n        lookup: MINUTE,\r\n      },\r\n\t  {\r\n        title: 'End(hh)',\r\n        field: 'end-hh',\r\n        lookup: HOUR,\r\n      },\r\n\t  {\r\n        title: 'End(mm)',\r\n        field: 'end-mm',\r\n        lookup: MINUTE,\r\n      },\r\n    ],\r\n\tdata:[],\r\n   });\r\n  return (\r\n  <Paper>\r\n    <MaterialTable\r\n      title=\"Editable Example\"\r\n      columns={state.columns}\r\n\t  data={state.data}\r\n      editable={{\r\n        onRowAdd: (newData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              setState((prevState) => {\r\n                const data = [...prevState.data];\r\n                data.push(newData);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              if (oldData) {\r\n                setState((prevState) => {\r\n                  const data = [...prevState.data];\r\n                  data[data.indexOf(oldData)] = newData;\r\n                  return { ...prevState, data };\r\n                });\r\n              }\r\n            }, 600);\r\n          }),\r\n        onRowDelete: (oldData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              setState((prevState) => {\r\n                const data = [...prevState.data];\r\n                data.splice(data.indexOf(oldData), 1);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          }),\r\n      }}\r\n    />\r\n\t<Button onClick={handleSaveClick(state.data)} > Save </Button>\r\n\t</Paper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  \r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onAddScheduleClick: (list) => dispatch(addSchedule(list)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Schedule);\r\n","\r\nexport const addSchedule = (data) => {\r\n  return {\r\n    type: \"ADD_SCHEDULE\",\r\n    data\r\n  };\r\n};\r\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { Paper } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Link, Route, BrowserRouter, Switch } from \"react-router-dom\";\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\nimport AddSchedule from \"./containers/addSchedule\";\n\nimport './App.css';\n\nfunction TabContainer({ children, dir }) {\n  return (\n    <Typography component=\"div\" dir={dir} style={{ padding: 8 * 3 }}>\n      {children}\n    </Typography>\n  );\n}\n\nTabContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n  dir: PropTypes.string.isRequired\n};\n\nconst styles = theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 500\n  }\n});\n\nclass App extends React.Component {\n  state = {\n    value: 0\n  };\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  handleChangeIndex = index => {\n    this.setState({ value: index });\n  };\n\n  render() {\n    const { classes, theme } = this.props;\n\n    return (\n      <BrowserRouter>\n        <div className={classes.root}>\n          <AppBar position=\"static\" color=\"default\">\n            <Tabs\n              value={this.state.value}\n              onChange={this.handleChange}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              fullWidth\n            >\n              <Tab label=\"Add Schedule\" component={Link} to=\"/addschedule\" />\n              <Tab label=\"Item Two\" component={Link} to=\"/two\" />\n            </Tabs>\n          </AppBar>\n\n          <Switch>\n            <Route path=\"/addschedule\" component={PageShell(AddSchedule)} />\n            <Route path=\"/two\" component={PageShell(ItemTwo)} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nfunction ItemOne(theme) {\n  return (\n    <Paper>\n      <div>Item 1</div>\n    </Paper>\n  );\n}\n\nfunction ItemTwo(theme) {\n  return (\n    <Paper>\n      <div>Item two</div>\n    </Paper>\n  );\n}\n\nconst PageShell = (Page, previous) => {\n  return props => (\n    <div className=\"page\">\n      <ReactCSSTransitionGroup\n        transitionAppear={true}\n        transitionAppearTimeout={600}\n        transitionEnterTimeout={600}\n        transitionLeaveTimeout={600}\n        transitionName={props.match.path === \"/one\" ? \"SlideIn\" : \"SlideOut\"}\n      >\n        {console.log(props)}\n        <Page {...props} />\n      </ReactCSSTransitionGroup>\n    </div>\n  );\n};\n\nexport default withStyles(styles, { withTheme: true })(App);\n","import { persistentReducer } from 'redux-pouchdb';\n\nconst schedule = (state = [], action) => {\n  switch (action.type) {\n    case \"ADD_SCHEDULE\":\n      return [\n        ...state,\n        action.payload\n      ];\n    default:\n      return state;\n  }\n};\n\nexport default persistentReducer(schedule);\n","import { combineReducers } from 'redux';\n\nimport schedule from './schedule';\n\nconst reducer = combineReducers({\n  schedule\n});\n\nexport default reducer;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { persistentStore } from 'redux-pouchdb';\nimport PouchDB from 'pouchdb/dist/pouchdb';\n\nimport reducer from './reducers';\n\nconst db = new PouchDB('dbname');\nconst applyMiddlewares = applyMiddleware();\n\nconst createStoreWithMiddleware = compose(\n  applyMiddlewares,\n  persistentStore(db)\n)(createStore);\n\nexport default createStoreWithMiddleware(reducer, {});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\nimport { register } from './utils/service-worker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nregister();\n","import axios from 'axios';\r\n\r\nexport function register() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.register('/service-worker.js')\r\n      .then(function() {\r\n        console.log('Service worker registered');\r\n      });\r\n  } else {\r\n    console.warn('Service worker is not supported in this browser');\r\n  }\r\n}\r\n\r\n"],"sourceRoot":""}